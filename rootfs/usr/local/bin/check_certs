#!/bin/bash

source /usr/local/bin/functions

RELOAD_NGINX=0

f_check_certs() {
    LIST_DOMAINS=$(ls /nginx/ssl/certificates | grep .crt | grep -v issuer | sed 's|.crt||g')

    for domain in ${LIST_DOMAINS}; do 
        CERTFILE=/nginx/ssl/certificates/${domain}.crt
        KEYFILE=/nginx/ssl/certificates/${domain}.key
        SCTFILE=/nginx/ssl/timestamps/${domain}/fullchain.sct

        SSL_ALGO="$(openssl x509 -text -in ${CERTFILE} | grep "Public Key Algorithm" | awk '{print $4}')"
        SSL_SIZE="$(openssl x509 -text -in ${CERTFILE} | grep "Public-Key" | sed 's/^.*(\(.*\) bit)$/\1/')"

        if [ "${SSL_ALGO}" == "rsaEncryption" ]; then
            SSL_TYPE="rsa${SSL_SIZE}"
        elif [ "${SSL_ALGO}" == "id-ecPublicKey" ]; then
            SSL_TYPE="ec${SSL_SIZE}"
        fi

        mkdir -p /nginx/www/${domain}
        openssl x509 -checkend 864000 -noout -in "${CERTFILE}"
        if [ $? == 0 ]; then
            f_log INF "Certificate for ${domain} is good for another 10 days!"
        else
            grep -rn ${domain} /nginx/sites-enabled/* > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                f_log INF "Generate New Certificate for ${domain}"
                /usr/local/bin/lego -a -m ${EMAIL} -d ${domain} --path /nginx/ssl --webroot /nginx/www/${domain} -k ${SSL_TYPE} renew
                if [ $? == 0 ]; then
                    if [ -e ${CERTFILE} ]; then
                        RELOAD_NGINX=1
                        if [ -f ${SCTFILE} ]; then
                            ct-submit ct.googleapis.com/pilot <${CERTFILE}>${SCTFILE}
                        fi
                        f_log INF "New Certificate for ${domain} generated" 
                    fi
                else 
                    f_log ERR "New Certificate for ${domain} not generated"
                fi
            fi
        fi             
    done
}

if [ -e /nginx/ssl/certificates ]; then
    f_check_certs
fi

if [ ${RELOAD_NGINX} -eq 1 ]; then
    nginx -s reload
fi
